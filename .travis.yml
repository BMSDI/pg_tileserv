language: go
sudo: false

matrix:
  include:
  - os: linux # cross-compile windows
    go: tip
    env:
    - WINDOWS=true
    - CGO_ENABLED=1
    - GOOS=windows
    - GOARCH=amd64
    - CC=x86_64-w64-mingw32-gcc
  # - os: linux
  #   go: tip
  #   env: WINDOWS=false
  # - os: osx
  #   go: tip
  #   env: WINDOWS=false

before_install:
- if [ "$WINDOWS" = "true" ]; then sudo apt update; fi

install:
- if [ "$WINDOWS" = "true" ]; then sudo apt install gcc-mingw-w64 libc6-dev-i386; fi

script:
- go build -v
- if [ "$TRAVIS_TAG" = "" ]; then REL=snapshot; else REL=$TRAVIS_TAG; fi
- if [ "$WINDOWS" = "true" ]; then RELOS=windows; else RELOS=$TRAVIS_OS_NAME; fi
- mkdir upload
- zip -r upload/pg_tileserv_${REL}_${RELOS}.zip pg_tileserv* README.md LICENSE.md assets/

deploy:
  - provider: s3
    on:
      repo: CrunchyData/pg_tileserv
      branch: master
    region: us-east-1
    bucket: postgisftw
    local_dir: "./upload"
    overwrite: true
    verbose: true
    edge: true
    access_key_id: ${AWS_ACCESS_KEY_ID}
    secret_access_key: ${AWS_SECRET_ACCESS_KEY}
    cleanup: false
  - provider: s3
    on:
      repo: CrunchyData/pg_tileserv
      tags: true
    region: us-east-1
    bucket: postgisftw
    local_dir: "./upload"
    overwrite: true
    verbose: true
    edge: true
    access_key_id: ${AWS_ACCESS_KEY_ID}
    secret_access_key: ${AWS_SECRET_ACCESS_KEY}
    cleanup: false
